type Split {
  id: ID!
  creator: String!
  members: [String!]!
  defaultToken: String!
  createdAt: BigInt!
  totalDebt: BigInt!
  spendings: [Spending!]! @derivedFrom(field: "split")
  debts: [Debt!]! @derivedFrom(field: "split")
}

type Spending {
  id: ID!
  split: Split!
  spendingId: BigInt!
  title: String!
  payer: String!
  amount: BigInt!
  forWho: [String!]!
  timestamp: BigInt!
  token: String!
  txHash: String!
}

type Debt {
  id: ID!
  split: Split!
  debtor: String!
  creditor: String!
  amount: BigInt!
  token: String!
  isPaid: Boolean!
  paidAt: BigInt
  txHash: String
  payments: [DebtPayment!]! @derivedFrom(field: "debt")
}

type DebtPayment {
  id: ID!
  debt: Debt!
  amount: BigInt!
  timestamp: BigInt!
  txHash: String!
}

type UserActivity {
  id: ID!
  totalSpentETH: BigInt!
  totalSpentUSD: BigInt!
  totalReceivedETH: BigInt!
  totalReceivedUSD: BigInt!
  totalGasSpent: BigInt!
  transactionCount: Int!
  splits: [String!]!
  transactions: [Transaction!]! @derivedFrom(field: "from")
}

type Transaction {
  id: ID!
  from: UserActivity!
  to: String!
  amount: BigInt!
  token: String!
  gasUsed: BigInt!
  gasPrice: BigInt!
  timestamp: BigInt!
  status: String!
  blockNumber: BigInt!
  txType: String!
}

type Bundle {
  id: ID!
  ethPriceUSD: BigDecimal!
}

type Pool {
  id: ID!
  chainId: BigInt!
  name: String!
  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
  token0: String!
  token1: String!
  feeTier: BigInt!
  liquidity: BigInt!
  sqrtPrice: BigInt!
  token0Price: BigDecimal!
  token1Price: BigDecimal!
  tick: BigInt
  tickSpacing: BigInt!
  observationIndex: BigInt!
  volumeToken0: BigDecimal!
  volumeToken1: BigDecimal!
  volumeUSD: BigDecimal! @index
  untrackedVolumeUSD: BigDecimal!
  feesUSD: BigDecimal!
  feesUSDUntracked: BigDecimal!
  txCount: BigInt! @index
  collectedFeesToken0: BigDecimal!
  collectedFeesToken1: BigDecimal!
  collectedFeesUSD: BigDecimal!
  totalValueLockedToken0: BigDecimal!
  totalValueLockedToken1: BigDecimal!
  totalValueLockedETH: BigDecimal!
  totalValueLockedUSD: BigDecimal! @index
  totalValueLockedUSDUntracked: BigDecimal!
  liquidityProviderCount: BigInt!
  hooks: String!
  ticks: [Tick!]! @derivedFrom(field: "pool")
}

type Token {
  id: ID!
  chainId: BigInt!
  symbol: String!
  name: String!
  decimals: BigInt!
  totalSupply: BigInt!
  volume: BigDecimal!
  volumeUSD: BigDecimal!
  untrackedVolumeUSD: BigDecimal!
  feesUSD: BigDecimal!
  txCount: BigInt!
  poolCount: BigInt!
  totalValueLocked: BigDecimal!
  totalValueLockedUSD: BigDecimal!
  totalValueLockedUSDUntracked: BigDecimal!
  derivedETH: BigDecimal!
  whitelistPools: [String!]!
}

type Tick {
  id: ID!
  chainId: BigInt!
  pool: Pool!
  tickIdx: BigInt! @index
  liquidityGross: BigInt!
  liquidityNet: BigInt!
  price0: BigDecimal!
  price1: BigDecimal!
  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
}

type Swap
  @index(fields: ["timestamp", "pool"])
  @index(fields: ["amountUSD", "pool"]) {
  id: ID!
  chainId: BigInt!
  transaction: String!
  timestamp: BigInt! @index
  pool: String!
  token0: Token!
  token1: Token!
  sender: String!
  origin: String!
  amount0: BigDecimal!
  amount1: BigDecimal!
  amountUSD: BigDecimal!
  sqrtPriceX96: BigInt!
  tick: BigInt!
  logIndex: BigInt!
}

type PoolManager {
  id: ID!
  chainId: BigInt!
  poolCount: BigInt!
  txCount: BigInt!
  totalVolumeUSD: BigDecimal!
  totalVolumeETH: BigDecimal!
  totalFeesUSD: BigDecimal!
  totalFeesETH: BigDecimal!
  untrackedVolumeUSD: BigDecimal!
  totalValueLockedUSD: BigDecimal!
  totalValueLockedETH: BigDecimal!
  totalValueLockedUSDUntracked: BigDecimal!
  totalValueLockedETHUntracked: BigDecimal!
  owner: String!
  numberOfSwaps: BigInt!
  hookedPools: BigInt!
  hookedSwaps: BigInt!
}

type HookStats {
  id: ID!
  chainId: BigInt!
  numberOfPools: BigInt!
  numberOfSwaps: BigInt!
  firstPoolCreatedAt: BigInt!
  totalValueLockedUSD: BigDecimal!
  totalVolumeUSD: BigDecimal!
  untrackedVolumeUSD: BigDecimal!
  totalFeesUSD: BigDecimal!
}
